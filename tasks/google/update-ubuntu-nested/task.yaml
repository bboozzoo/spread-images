summary: Update virt enabled Ubuntu xenial/bionic 64 bits image with a nested vm running ready to be used

systems: [ubuntu-16.04-64-virt-enabled, ubuntu-18.04-64-virt-enabled]

execute: |
    case "$SPREAD_SYSTEM" in
        ubuntu-16.04-64*)
            TARGET_SYSTEM=ubuntu-16.04-64-nested
            NESTED_SYSTEM=xenial
            NESTED_ARCH=amd64
        ;;
        ubuntu-18.04-64*)
            TARGET_SYSTEM=ubuntu-18.04-64-nested
            NESTED_SYSTEM=bionic
            NESTED_ARCH=amd64
        ;;
        *)
            echo "System not supported"
            exit 1
        ;;
    esac

    . "$TESTSLIB/google.sh"
    . "$TESTSLIB/names.sh"
    . "$TESTSLIB/nested.sh"
    . "$TESTSLIB/pkgdb.sh"
    . "$TESTSLIB/utils.sh"

    if [ "$SPREAD_REBOOT" = 0 ]; then
        # Make the upgrade and install the dependencies needed to run snapd tests
        distro_update_package_db
        distro_upgrade_packages
        distro_install_package qemu qemu-kvm cloud-image-utils ubuntu-image genisoimage snapd sshpass
        install_test_dependencies "$TARGET_SYSTEM"
        remove_pkg_blacklist
        distro_clean_package_cache
        REBOOT
    fi

    # Avoid checking for new release, it could cause lock on apt
    sed -i 's/^Prompt=.*$/Prompt=never/' /etc/update-manager/release-upgrades

    # Disable daily checks for updates to avoid apt locks
    sudo systemctl disable --now apt-daily{,-upgrade}.{timer,service}

    #Create the nested vm
    create_nested_classic_vm
    execute_remote 'sudo apt update'
    execute_remote 'sudo apt upgrade -y'
    execute_remote 'sudo apt install -y linux-image-extra-$(uname -r) || sudo apt install -y linux-modules-extra-$(uname -r)'
    execute_remote 'sudo systemctl disable --now apt-daily{,-upgrade}.{timer,service}'
    execute_remote "sudo sed -i 's/^Prompt=.*$/Prompt=never/' /etc/update-manager/release-upgrades"

    # Clean disk before create the shapshot
    clean_machine

    # Create a new image based on the current disk
    create_image_from_disk "$IMAGE" "$FAMILY" "$DESCRIPTION" "$DISK"

restore: |
    case "$SPREAD_SYSTEM" in
        ubuntu-16.04-64*)
            TARGET_SYSTEM=ubuntu-16.04-64-nested
        ;;
        ubuntu-18.04-64*)
            TARGET_SYSTEM=ubuntu-18.04-64-nested
        ;;
        *)
            echo "System not supported"
            exit 1
        ;;
    esac

    . "$TESTSLIB/google.sh"
    . "$TESTSLIB/names.sh"

    delete_snapshot "$DISK"
    delete_deprecated_images
